name: Turbo Trigger
inputs:
  workspace:
    description: Name for npm package name
    required: true
outputs:
  trigger:
    description: "Boolean value to trigger or not trigger the workflow"
    value: ${{ steps.turbo.outputs.trigger }}
runs:
  using: "composite"
  steps:
    - name: Fetch Head
      uses: actions/checkout@v3
      with:
        fetch-depth: 2
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"
    - name: Show default environment variables
      run: |
        echo "The job_id is: $GITHUB_JOB"   # reference the default environment variables
        echo "The id of this action is: $GITHUB_ACTION"   # reference the default environment variables
        echo "The run id is: $GITHUB_RUN_ID"
        echo "The GitHub Actor's username is: $GITHUB_ACTOR"
        echo "GitHub SHA: $GITHUB_SHA"
    - run: echo "Deploying to production server on branch $GITHUB_REF"
    - name: Turbo Pull Request
      id: turbo
      shell: bash
      run: |
        git checkout -- pnpm-lock.yaml
        if [ ${{ github.event_name }} == 'merge_group' ]; then
          npx turbo-ignore ${{ inputs.workspace }} --fallback ${{ github.merge_group.base_sha }} && echo "trigger=false" >> "$GITHUB_OUTPUT" || echo "trigger=true" >> "$GITHUB_OUTPUT"
        elif [ ${{ github.event_name }} == 'pull_request' ]; then
          npx turbo-ignore ${{ inputs.workspace }} && echo "trigger=false" >> "$GITHUB_OUTPUT" || echo "trigger=true" >> "$GITHUB_OUTPUT"
        else
          echo "trigger=true" >> "$GITHUB_OUTPUT"
        fi
