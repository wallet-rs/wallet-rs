name: Rust
on:
  push:
    branches:
      - main
  pull_request:
  merge_group:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
env:
  RUSTFLAGS: -D warnings
  CARGO_TERM_COLOR: always
jobs:
  rust:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          # - os: ubuntu-latest
          #   target: x86_64-linux-android 
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-apple-darwin
          # - os: windows-latest
          #   target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt, clippy
          target: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install -y gcc-multilib libpq-dev
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --check
      - uses: actions-rs/clippy-check@v1
        with:
          args: --all --all-features
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: --package mpl-license-checker
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target ${{ matrix.target }}
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target ${{ matrix.target }}
      - uses: taiki-e/install-action@cargo-llvm-cov
      - run: |
          cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: false
