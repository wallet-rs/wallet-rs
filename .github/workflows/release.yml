name: Release
on:
  push:
    branches:
      - main
permissions:
  contents: write
  pull-requests: write
jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - name: Get Release Info
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: rust
          command: manifest
          monorepo-tags: true
          token: ${{ secrets.GITHUB_TOKEN }}
          default-branch: main
      - name: Print Release Info
        run: |
          echo "Release Created: ${{ steps.release.outputs.release_created }}"
          echo "Release PR: ${{ steps.release.outputs.pr }}"
          echo "Release PRs: ${{ steps.release.outputs.prs }}"
  cargo:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Head
        uses: actions/checkout@v3
      - name: Rust Install
        uses: ./.github/actions/rust-install
        with:
          sccache_endpoint: ${{ secrets.SCCACHE_ENDPOINT }}
          sccache_key_id: ${{ secrets.SCCACHE_KEY_ID }}
          sccache_secret: ${{ secrets.SCCACHE_SECRET }}
      - name: Rust Build
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: Publish Crates
        uses: katyo/publish-crates@v2
        with:
          ignore-unpublished-changes: true
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  npm:
      needs: release-please
      if: ${{ needs.release-please.outputs.release_created == 'true' }}
      runs-on: ubuntu-latest
      steps:
        - name: Fetch Head
          uses: actions/checkout@v3
        - name: Rust Install
          uses: ./.github/actions/rust-install
          with:
            sccache_endpoint: ${{ secrets.SCCACHE_ENDPOINT }}
            sccache_key_id: ${{ secrets.SCCACHE_KEY_ID }}
            sccache_secret: ${{ secrets.SCCACHE_SECRET }}
        - name: Rust Build
          uses: actions-rs/cargo@v1
          with:
            command: build
        - name: Install Node
          uses: actions/setup-node@v1
          with:
            registry-url: 'https://registry.npmjs.org'
        - name: Publish to NPM
          env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          run: |
            cd packages/signer
            npm publish
